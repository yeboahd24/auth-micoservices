"""
Django settings for authentication_api project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from my_package.config.json_reader import read_config
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#################### SETTINGS ####################
SETTINGS_FILE = os.path.join("config/settings.json")

ALL_SETTINGS = read_config(SETTINGS_FILE)

ALLOWED_HOSTS = ALL_SETTINGS["security"]["allowed_hosts"]

SECRET_KEY = ALL_SETTINGS["secret_key"]

# Application definition

AUTH_USER_MODEL = "user.CustomUser"


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

LOCAL_APPS = ["user"]

THIRD_PARTY_APPS = ["corsheaders"]

INSTALLED_APPS += LOCAL_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

#################### MIDDLEWARES ####################
THIRD_PARTY_MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
]

CUSTOM_MIDDLEWARE = [
    "user.middlewares.authentication.AuthenticationMiddleware",
    "user.exceptions.handler.handle_exception",
]
MIDDLEWARE += THIRD_PARTY_MIDDLEWARE + CUSTOM_MIDDLEWARE


ROOT_URLCONF = "authentication_api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "authentication_api.wsgi.application"


#################### DATABASE CONFIGURATIONS ####################

DB_NAME = ALL_SETTINGS["db"]["default"]["db_name"]
DB_HOST = ALL_SETTINGS["db"]["default"]["db_host"]
DB_PORT = ALL_SETTINGS["db"]["default"]["db_port"]
DB_USER = ALL_SETTINGS["db"]["default"]["db_user"]
DB_PASSWORD = ALL_SETTINGS["db"]["default"]["db_password"]
DB_CONN_MAX_AGE = ALL_SETTINGS["db"]["default"]["conn_max"]
DB_CONN_HEALTH_CHECKS = ALL_SETTINGS["db"]["default"]["conn_health_checks"]

#################### EMAIL CONFIGURATIONS ####################

if DEBUG:
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

EMAIL_HOST = ALL_SETTINGS["email"]["email_host"]
EMAIL_PORT = ALL_SETTINGS["email"]["email_port"]
EMAIL_HOST_USER = ALL_SETTINGS["email"]["email_user"]
EMAIL_HOST_PASSWORD = ALL_SETTINGS["email"]["email_password"]
EMAIL_USE_TLS = True
EMAIL_SUBJECT_PREFIX = "[<mesika>]"


#################### RABBITMQ CONFIGURATIONS ####################
RABBITMQ_VHOST = ALL_SETTINGS["rabbitmq"]["rabbitmq_vhost"]
RABBITMQ_HOST = ALL_SETTINGS["rabbitmq"]["rabbitmq_host"]
RABBITMQ_PORT = ALL_SETTINGS["rabbitmq"]["rabbitmq_port"]
RABBITMQ_USER = ALL_SETTINGS["rabbitmq"]["rabbitmq_user"]
RABBITMQ_PASSWORD = ALL_SETTINGS["rabbitmq"]["rabbitmq_password"]

#################### REDIS CONFIGURATIONS ####################
REDIS_USER = ALL_SETTINGS["redis"]["redis_user"]
REDIS_PASSWORD = ALL_SETTINGS["redis"]["redis_password"]
REDIS_HOST = ALL_SETTINGS["redis"]["redis_host"]
REDIS_PORT = ALL_SETTINGS["redis"]["redis_port"]

#################### CELERY CONFIGURATIONS ####################
CELERY_BROKER_URL = f"amqp://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@{RABBITMQ_HOST}:{RABBITMQ_PORT}/{RABBITMQ_VHOST}"
CELERY_TASK_ALWAYS_EAGER = False
CELERY_SEND_TASK_ERROR_EMAIL = True
CELERY_TASK_CREATE_MISSING_QUEUE = True
CELERY_ROUTING_KEY = ALL_SETTINGS["celery"]["routing_key"]
CELERY_QUEUE = ALL_SETTINGS["celery"]["queue"]
CELERY_EXCHANGE = ALL_SETTINGS["celery"]["exchange"]

CELERY_TASK_QUEUES = {
    "user.*": {
        "exchange": CELERY_EXCHANGE,
        "routing_key": CELERY_ROUTING_KEY,
    },
    "logging": {"exchange": "logging", "routing_key": "logging"},
}

CELERY_TASK_ROUTES = {
    "user.*": {
        "queue": CELERY_QUEUE,
        "exchange": CELERY_EXCHANGE,
        "routing_key": CELERY_ROUTING_KEY,
    },
    "logging": {"queue": "logging", "exchange": "logging", "routing_key": "logging"},
}

CELERY_IMPORTS = ("user.tasks",)

if DEBUG:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": DB_NAME,
            "USER": DB_USER,
            "PASSWORD": DB_PASSWORD,
            "HOST": DB_HOST,
            "PORT": DB_PORT,
        }
    }

#################### CUSTOM AUTHENTICATION ####################
AUTHENTICATION_BACKENDS = [
    "user.custom_backend.AuthenticateUser",
    "django.contrib.auth.backends.ModelBackend",
]


#################### CACHE CONFIGURATIONS ####################
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}

HASH_ALGORITHM = "HS256"


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        "OPTIONS": {
            "user_attributes": ["username", "email", "first_name", "last_name"],
            "max_similarity": 0.7,
        },
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 10,
        },
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
    {
        "NAME": "user.validators.SpecialCharValidator",  # custom validator
    },
    {
        "NAME": "user.validators.UppercaseValidator",  # custom validator
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
EMAIL_HOST_USER = "<no-reply>@gmail.com"

LOGIN_REDIRECT_URL = "/"
LOGIN_URL = "/api/v1/user/login/"

OTP_CACHE_TIMEOUT = 300
